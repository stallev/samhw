AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  samhw
  Sample SAM Template for samhw

Globals:
  Function:
    Timeout: 900

Resources:
  VolunteerCrawlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: crawler/
      Handler: app.lambdaHandler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Role: !GetAtt VolunteerCrawlerFunctionRole.Arn
      Environment:
        Variables:
          MY_AWS_REGION: !Ref AWS::Region
          DYNAMO_DB_TABLE: testCrawlerTable
          S3_BUCKET_NAME: test-s3-crawler-allev
          USER_OWNER_ID: d7fcb4d4-3b8d-4979-a4f9-080e7886f9e2
          GOOGLE_API_KEY_PARAM_NAME: google_api_key
      Events:
        AlabamaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 22 * * ? *)  # 10:00 PM UTC
            Name: AlabamaVolunteerSearch
            Description: "Trigger volunteer search for CA at 10:00 PM"
            Input: '{"location": "AL"}'
        CaliforniaSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(30 14 * * ? *)  # 14:20 PM UTC
            Name: CaliforniaVolunteerSearch
            Description: "Trigger volunteer search for 93721 at 11:00 PM"
            Input: '{"location": "93721"}'
        NewYorkSchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 15 * * ? *)  # 15:00 PM UTC
            Name: NewYorkVolunteerSearch
            Description: "Trigger volunteer search for 93721 at 11:00 PM"
            Input: '{"location": "11205"}'
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  VolunteerCrawlerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:BatchWriteItem
                  - dynamodb:BatchGetItem
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/testCrawlerTable'
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::test-s3-crawler-allev'
                  - !Sub 'arn:aws:s3:::test-s3-crawler-allev/*'
        - PolicyName: SSMAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/google_api_key"

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Volunteer Crawler function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  VolunteerCrawlerFunction:
    Description: "Volunteer Crawler Lambda Function ARN"
    Value: !GetAtt VolunteerCrawlerFunction.Arn
  VolunteerCrawlerFunctionIamRole:
    Description: "Implicit IAM Role created for Volunteer Crawler function"
    Value: !GetAtt VolunteerCrawlerFunctionRole.Arn
